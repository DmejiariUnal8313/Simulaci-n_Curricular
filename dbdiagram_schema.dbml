// ═══════════════════════════════════════════════════════════════════════════════
// SISTEMA DE SIMULACIÓN CURRICULAR CON CONVALIDACIONES
// ═══════════════════════════════════════════════════════════════════════════════
// Para usar en dbdiagram.io (https://dbdiagram.io/)
// Copia y pega este código en dbdiagram.io para generar el diagrama ER
// 
// ESQUEMA FUNCIONAL - Solo tablas del dominio del negocio en uso activo
// Actualizado: 31 de Julio, 2025
//
// FUNCIONALIDADES PRINCIPALES:
// - Simulación de cambios curriculares temporales
// - Sistema de convalidaciones de materias externas  
// - Análisis de impacto en progreso académico
// - Gestión completa de prerrequisitos y dependencias
//
// Ver documentación detallada en: TABLA_FUNCIONALIDAD_EXPLICADA.md
// ═══════════════════════════════════════════════════════════════════════════════

// === NÚCLEO ACADÉMICO PRINCIPAL ===

// Materias del plan curricular oficial - Base para simulaciones y convalidaciones
Table subjects {
  code varchar(10) [pk, note: 'Código único de materia (ej: 4100548)']
  name varchar(255) [not null, note: 'Nombre de la materia']
  semester integer [not null, note: 'Semestre curricular (1-10)']
  credits integer [not null, note: 'Créditos académicos']
  created_at timestamp [not null, default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [not null, default: `CURRENT_TIMESTAMP`]
  
  Note: '''
  PROPÓSITO: Plan de estudios oficial de la institución
  FUNCIONALIDAD: 
  - Referencia base para simulaciones curriculares
  - Target para convalidaciones directas de materias externas
  - Cálculo de progreso académico estudiantil
  '''
}

// Registro de estudiantes con progreso académico calculado
Table students {
  id bigint [pk, increment]
  name varchar(255) [not null, note: 'Nombre completo del estudiante']
  document varchar(20) [unique, note: 'Número de documento/cédula del estudiante']
  progress_percentage decimal(5,2) [not null, default: 0.00, note: 'Progreso académico (0-100%)']
  created_at timestamp [not null, default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [not null, default: `CURRENT_TIMESTAMP`]
  
  Note: '''
  PROPÓSITO: Base de estudiantes para análisis de impacto
  FUNCIONALIDAD:
  - Análisis de impacto de simulaciones curriculares
  - Cálculo de progreso con convalidaciones aplicadas
  - Determinación de semestre actual basado en progreso
  - Identificación única por número de documento
  '''
}

// Historial académico completo - Relación estudiante-materia con calificaciones
Table student_subject {
  id bigint [pk, increment]
  student_id bigint [not null]
  subject_code varchar(10) [not null]
  grade decimal(3,1) [note: 'Nota final (0.0-5.0)']
  status varchar(20) [not null, default: 'enrolled', note: 'enrolled|passed|failed|withdrawn']
  created_at timestamp [not null, default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [not null, default: `CURRENT_TIMESTAMP`]
  
  indexes {
    (student_id, subject_code) [unique, note: 'Evita inscripciones duplicadas']
  }
  
  Note: '''
  PROPÓSITO: Historial académico completo de estudiantes
  FUNCIONALIDAD:
  - Verificación de prerrequisitos para nuevas materias
  - Cálculo de progreso académico actual
  - Base para análisis de convalidaciones (materias ya aprobadas)
  - Validación de disponibilidad para cursado
  '''
}

// Prerrequisitos curriculares - Define dependencias entre materias
Table subject_prerequisites {
  id bigint [pk, increment]
  subject_code varchar(10) [not null, note: 'Materia que tiene prerrequisito']
  prerequisite_code varchar(10) [not null, note: 'Materia prerrequisito requerida']
  created_at timestamp [not null, default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [not null, default: `CURRENT_TIMESTAMP`]
  
  indexes {
    (subject_code, prerequisite_code) [unique, note: 'Evita prerrequisitos duplicados']
  }
  
  Note: '''
  PROPÓSITO: Gestión de dependencias curriculares
  FUNCIONALIDAD:
  - Validación automática de prerrequisitos en inscripciones
  - Simulación de cambios de prerrequisitos y análisis de impacto
  - Identificación de materias bloqueadas para estudiantes
  - Generación de alertas en simulaciones curriculares
  '''
}

// === GESTIÓN TEMPORAL DE MATERIAS EN CURSO ===

// Materias que estudiantes están cursando en período académico actual
Table student_current_subjects {
  id bigint [pk, increment]
  student_id bigint [not null]
  subject_code varchar(10) [not null]
  semester_period varchar(20) [not null, note: 'Período académico (ej: "2025-1")']
  status varchar(20) [not null, default: 'cursando', note: 'cursando|en_examen|perdida']
  partial_grade decimal(3,1) [note: 'Nota parcial actual']
  created_at timestamp [not null, default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [not null, default: `CURRENT_TIMESTAMP`]
  
  indexes {
    (student_id, semester_period) [note: 'Consultas por estudiante y período']
    (student_id, subject_code, semester_period) [unique, note: 'Evita inscripciones duplicadas por período']
  }
  
  Note: '''
  PROPÓSITO: Gestión de materias en curso del período actual
  FUNCIONALIDAD:
  - Determinar impacto inmediato de cambios curriculares
  - Identificar estudiantes en riesgo académico
  - Seguimiento de rendimiento en tiempo real
  - Validación de conflictos en simulaciones
  '''
}

// === SISTEMA DE CONVALIDACIONES - CURRÍCULOS EXTERNOS ===

// Mallas curriculares de otras instituciones o versiones modificadas
Table external_curriculums {
  id bigint [pk, increment]
  name varchar(255) [not null, note: 'Nombre del currículo externo']
  institution varchar(255) [note: 'Institución de origen']
  description text [note: 'Descripción del currículo']
  uploaded_file varchar(255) [note: 'Archivo Excel importado (si aplica)']
  metadata json [note: 'Metadatos de origen (simulación, importación, etc.)']
  status varchar(20) [not null, default: 'active', note: 'active|inactive']
  created_at timestamp [not null, default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [not null, default: `CURRENT_TIMESTAMP`]
  
  Note: '''
  PROPÓSITO: Gestión de currículos externos y versiones modificadas
  FUNCIONALIDAD:
  - Importar currículos de otras universidades
  - Guardar versiones modificadas desde simulaciones
  - Base para procesos de convalidación masiva
  - Gestión de múltiples versiones de mallas curriculares
  '''
}

// Materias individuales de currículos externos
Table external_subjects {
  id bigint [pk, increment]
  external_curriculum_id bigint [not null]
  code varchar(255) [not null, note: 'Código de materia en currículo externo']
  name varchar(255) [not null, note: 'Nombre de la materia externa']
  credits integer [not null, note: 'Créditos en sistema externo']
  semester integer [not null, note: 'Semestre en currículo externo']
  description text [note: 'Descripción detallada']
  additional_data json [note: 'Prerrequisitos y datos adicionales']
  created_at timestamp [not null, default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [not null, default: `CURRENT_TIMESTAMP`]
  
  indexes {
    (external_curriculum_id, code) [unique, note: 'Códigos únicos por currículo']
  }
  
  Note: '''
  PROPÓSITO: Catálogo de materias de currículos externos
  FUNCIONALIDAD:
  - Comparación de similaridad con materias internas
  - Generación automática de sugerencias de convalidación
  - Cálculo de créditos transferibles
  - Análisis de distribución por semestres
  '''
}

// === MAPEO Y REGLAS DE CONVALIDACIÓN ===

// Reglas de cómo materias externas se convalidan con el currículo interno
Table subject_convalidations {
  id bigint [pk, increment]
  external_curriculum_id bigint [not null]
  external_subject_id bigint [not null]
  internal_subject_code varchar(10) [note: 'Materia interna equivalente (null para libre elección)']
  convalidation_type varchar(20) [not null, note: 'direct|free_elective|not_convalidated']
  notes text [note: 'Justificación de la convalidación']
  equivalence_percentage decimal(5,2) [not null, default: 100.00, note: 'Porcentaje de equivalencia (0-100%)']
  status varchar(20) [not null, default: 'pending', note: 'pending|approved|rejected']
  approved_by varchar(255) [note: 'Usuario que aprobó la convalidación']
  approved_at timestamp [note: 'Fecha de aprobación']
  created_at timestamp [not null, default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [not null, default: `CURRENT_TIMESTAMP`]
  
  indexes {
    (external_subject_id, internal_subject_code) [unique, note: 'Evita mapeos duplicados']
  }
  
  Note: '''
  PROPÓSITO: Definición de reglas de equivalencia académica
  FUNCIONALIDAD:
  - DIRECTA: Materia externa → Materia interna específica
  - LIBRE ELECCIÓN: Materia externa → Créditos electivos
  - NO CONVALIDADA: Materia externa sin equivalencia (crédito perdido)
  - Cálculo automático de progreso con convalidaciones
  '''
}

// Procesamiento individual de convalidaciones por estudiante
Table student_convalidations {
  id bigint [pk, increment]
  student_id bigint [not null]
  subject_convalidation_id bigint [not null]
  external_grade decimal(4,2) [not null, note: 'Nota en sistema externo']
  internal_grade decimal(4,2) [note: 'Nota convertida al sistema interno']
  status varchar(20) [not null, default: 'pending', note: 'pending|approved|rejected']
  admin_notes text [note: 'Notas del administrador en el proceso']
  processed_by varchar(255) [note: 'Usuario que procesó la convalidación']
  processed_at timestamp [note: 'Fecha de procesamiento']
  created_at timestamp [not null, default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [not null, default: `CURRENT_TIMESTAMP`]
  
  indexes {
    (student_id, subject_convalidation_id) [unique, note: 'Una convalidación por estudiante']
  }
  
  Note: '''
  PROPÓSITO: Gestión del workflow de convalidaciones individuales
  FUNCIONALIDAD:
  - Workflow: pending → approved/rejected
  - Conversión automática de calificaciones entre sistemas
  - Auditoría completa del proceso de convalidación
  - Generación de reportes por estudiante
  '''
}

// === RELACIONES DEL DOMINIO DEL NEGOCIO ===

// Relaciones principales de simulación curricular
Ref: student_subject.student_id > students.id [delete: cascade]
Ref: student_subject.subject_code > subjects.code [delete: cascade]

Ref: subject_prerequisites.subject_code > subjects.code [delete: cascade]
Ref: subject_prerequisites.prerequisite_code > subjects.code [delete: cascade]

Ref: student_current_subjects.student_id > students.id [delete: cascade]
Ref: student_current_subjects.subject_code > subjects.code [delete: cascade]

// Relaciones del sistema de convalidaciones
Ref: external_subjects.external_curriculum_id > external_curriculums.id [delete: cascade]

Ref: subject_convalidations.external_curriculum_id > external_curriculums.id [delete: cascade]
Ref: subject_convalidations.external_subject_id > external_subjects.id [delete: cascade]
Ref: subject_convalidations.internal_subject_code > subjects.code [delete: cascade]

Ref: student_convalidations.student_id > students.id [delete: cascade]
Ref: student_convalidations.subject_convalidation_id > subject_convalidations.id [delete: cascade]

// ═══════════════════════════════════════════════════════════════════════════════
// RESUMEN DE FUNCIONALIDADES DEL SISTEMA
// ═══════════════════════════════════════════════════════════════════════════════
//
// IMPORTACIÓN DE DATOS:
//    - Importar estudiantes reales desde archivos CSV
//    - Agrupar registros por número de documento (cédula)
//    - Asignar nombres aleatorios para privacidad
//    - Separar historial académico (con notas) de materias actuales (sin notas)
//    - Validar existencia de materias antes de importar
//
// SIMULACIÓN CURRICULAR:
//    - Modificar temporalmente materias (semestre, prerrequisitos)
//    - Analizar impacto en estudiantes actuales
//    - Generar reportes de estudiantes afectados
//    - Guardar versiones modificadas para futuras convalidaciones
//
// SISTEMA DE CONVALIDACIONES:
//    - Importar currículos de otras instituciones
//    - Mapear equivalencias entre materias externas e internas
//    - Procesar convalidaciones individuales por estudiante
//    - Calcular progreso académico con créditos transferidos
//
// MÉTRICAS CLAVE:
//    - Progreso = (Materias Aprobadas / Total Materias) × 100
//    - Impacto = Estudiantes con cambio > 0.1% en progreso
//    - Convalidación = Directa | Libre Elección | No Convalidada
//
// OPTIMIZACIONES:
//    - Índices únicos para prevenir duplicados
//    - Cascadas para mantener integridad referencial
//    - Enumeraciones para validar estados
//    - Metadatos JSON para flexibilidad futura
//
// IMPORTACIÓN CSV:
//    - Comando: php artisan import:academic-history archivo.csv
//    - Agrupa por campo DOCUMENTO (cédula)
//    - Genera nombres aleatorios (nombres hispanos)
//    - Separa materias con nota (historial) vs sin nota (actuales)
//
// Ver documentación completa en: TABLA_FUNCIONALIDAD_EXPLICADA.md
// ═══════════════════════════════════════════════════════════════════════════════
